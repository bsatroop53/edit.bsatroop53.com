@page "/"
@inject ILogger<Post> Logger

<PageTitle>Home</PageTitle>

<div class="row">
    <div class="col-md-12">
        <EditForm Model="Model" FormName="NewPostForm" OnValidSubmit="@ValidSubmit" OnInvalidSubmit="@InvalidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <p>
                    <label for="postTitleField">
                        Title
                    </label>
                </p>
                <p>
                    <InputText 
                        id="postTitleField"
                        class="form-control"
                        @bind-Value="Model!.Title"
                        placeholder="A headline of what the post is all about."
                    />
                </p>
            </div>
            <div class="form-group">
                <p>
                    <label for="postDateField">
                        Post Date - When the event took place
                    </label>
                </p>
                <p>
                    <InputDate 
                        id="postDateField"
                        class="form-control"
                        Type="InputDateType.Date"
                        min="@(new DateTime( 1924, 1, 1 ).ToString( "yyyy-MM-dd" ))"
                        max="@DateTime.Today.ToString("yyyy-MM-dd")"
                        @bind-Value="Model!.PostDate"
                    />
                </p>
            </div>
            <div class="form-group">
                <p>
                    <label for="descriptionField">
                        Description
                    </label>
                </p>
                <p>
                    <InputText 
                        id="descriptionField" 
                        class="form-control"
                        @bind-Value="@Model!.Description"
                        placeholder="A one-sentence overview of this post."
                    />
                </p>
            </div>
            <div class="form-group">
                <p>
                    <label for="authorField">
                        Author
                    </label>
                </p>
                <p>
                    <InputText 
                        id="authorField" 
                        class="form-control"
                        @bind-Value="@Model!.Author"
                        placeholder="Who is writing this post?  Leave blank to remain anonymous."
                    />
                </p>
            </div>
            <div>
                <label for="postCategoryInput">
                    Category - Where does your post fit in best?
                    <InputSelect class="form-control" @bind-Value="Model!.Category">
                        <option value="@PostCategory.News">News</option>
                        <option value="@PostCategory.Events">Events</option>
                        <option value="@PostCategory.CampingTrips">Camping Trips</option>
                        <option value="@PostCategory.EagleProjects">Eagle Projects</option>
                        <option value="@PostCategory.PressReleases">Press Releases</option>
                        <option value="@PostCategory.GoldStarScouts">Gold Star Scouts</option>
                    </InputSelect>
                </label>
            </div>
            <div class="form-group">
                <p>
                    <label for="postContentsField">
                        Post Contents
                    </label>
                </p>
                <p>
                    <MarkdownEditor @bind-Value="Model!.PostContents" />
                </p>
            </div>
            <div class="form-group">
            </div>
            <div class="form-group">
                <p class="form-control">
                    <InputCheckbox id="readGuideCheckBox" @bind-Value="Model!.Agreed"/>
                    <label for="readGuideCheckBox">I have read the contribution guidelines, and agree to follow them.</label>
                </p>
            </div>
            <div>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
            <ValidationSummary />
        </EditForm>
    </div>
</div>

@code {

    // ---------------- Fields ----------------

    private EditContext? editContext;

    [SupplyParameterFromForm]
    private Post? Model { get; set; }

    protected override void OnInitialized()
    {
        Model = new Post();
        editContext = new( Model );
    }

    // ---------------- Properties ----------------

    // ---------------- Functions ----------------

    Task OnMarkdownValueChanged(string value)
    {
        return Task.CompletedTask;
    }

    private void ValidSubmit()
    {
        Logger.LogInformation( "Valid!" );
    }

    private void InvalidSubmit()
    {
        Logger.LogInformation( "Not Valid!" );
    }
}

